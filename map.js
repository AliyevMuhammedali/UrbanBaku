document.getElementById("map").style.display = "block";

// ===== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã =====
const map = L.map('map', {
  center: [40.4093, 49.8671],
  zoom: 13
});

const streets = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  maxZoom: 19,
  attribution: '&copy; OpenStreetMap contributors'
});
const satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
  maxZoom: 19,
  attribution: 'Tiles ¬© Esri'
});
const dark = L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
  maxZoom: 19,
  attribution: '&copy; CartoDB',
  subdomains: 'abcd'
});
streets.addTo(map);

const baseLayers = {
  "üó∫ –£–ª–∏—Ü—ã": streets,
  "üõ∞ –°–ø—É—Ç–Ω–∏–∫": satellite,
  "üåô –¢—ë–º–Ω–∞—è —Ç–µ–º–∞": dark
};
L.control.layers(baseLayers).addTo(map);

// ===== –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ GeoJSON =====
fetch('data/locations.geojson')
  .then(response => response.json())
  .then(data => {
    const geojsonLayer = L.geoJSON(data, {
      onEachFeature: function (feature, layer) {
        if (feature.properties && feature.properties.name) {
          layer.bindPopup(`<strong>${feature.properties.name}</strong><br>${feature.properties.description || ''}`);
        }
      }
    }).addTo(map);

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
    const searchControl = new L.Control.Search({
      layer: geojsonLayer,
      propertyName: 'name',
      marker: false,
      moveToLocation: function (latlng, title, map) {
        map.setView(latlng, 17); // –£–≤–µ–ª–∏—á–∏—Ç—å –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ
      }
    });
    searchControl.addTo(map);

    // –£–¥–∞–ª–∏—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫
    document.getElementById("loader").style.display = "none";
  })
  .catch(error => {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ GeoJSON:", error);
    alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.");
  });

 // ===== –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è =====
map.locate({ setView: true, maxZoom: 16 });

map.on('locationfound', function (e) {
  // –ú–∞—Ä–∫–µ—Ä –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
  const userMarker = L.marker(e.latlng).addTo(map)
    .bindPopup("–í—ã –∑–¥–µ—Å—å").openPopup();

  // –†–∞–¥–∏—É—Å —Ç–æ—á–Ω–æ—Å—Ç–∏
  L.circle(e.latlng, { radius: e.accuracy, color: '#136aec', fillOpacity: 0.1 }).addTo(map);
});

map.on('locationerror', function (e) {
  console.warn("–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞:", e.message);
});
