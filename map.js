// ===== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã –Ω–∞ –ë–∞–∫—É =====
const map = L.map('map', {
  center: [40.4093, 49.8671],
  zoom: 13
});

// ===== –ë–∞–∑–æ–≤—ã–µ —Å–ª–æ–∏ =====

// –£–ª–∏—Ü—ã (OSM)
const streets = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  maxZoom: 19,
  attribution: '&copy; OpenStreetMap contributors'
});

// –°–ø—É—Ç–Ω–∏–∫ (Esri)
const satellite = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
  maxZoom: 19,
  attribution: 'Tiles ¬© Esri'
});

// –¢—ë–º–Ω–∞—è —Ç–µ–º–∞ (CartoDB Dark)
const dark = L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
  maxZoom: 19,
  attribution: '&copy; CartoDB',
  subdomains: 'abcd'
});

// –î–æ–±–∞–≤–∏–º —Å–ª–æ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
streets.addTo(map);

// ===== –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å–ª–æ—ë–≤ =====
const baseLayers = {
  "üó∫ –£–ª–∏—Ü—ã": streets,
  "üõ∞ –°–ø—É—Ç–Ω–∏–∫": satellite,
  "üåô –¢—ë–º–Ω–∞—è —Ç–µ–º–∞": dark
};
L.control.layers(baseLayers).addTo(map);

// ===== –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ GeoJSON =====
fetch('data/locations.geojson')
  .then(response => response.json())
  .then(data => {
    L.geoJSON(data, {
      onEachFeature: function (feature, layer) {
        if (feature.properties && feature.properties.name) {
          layer.bindPopup(`<strong>${feature.properties.name}</strong><br>${feature.properties.description || ''}`);
        }
      }
    }).addTo(map);
  })
  .catch(error => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ GeoJSON:", error));
